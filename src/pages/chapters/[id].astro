---
import FootnoteSlideOver from "../../components/FootnoteSlideOver";
import Pauri from "../../components/Pauri.astro";
import Layout from "../../layouts/Layout.astro";
import { fetchFootnoteContent } from "../../helpers/fetchFootnoteContent";

export const getStaticPaths = async () => {
  const API_URL = import.meta.env.API_URL;

  const getChapterIds = async (bookId) => {
    const res = await fetch(`${API_URL}/books/${bookId}/chapters.json`);
    const { chapters } = await res.json();

    return chapters.map((chapter) => chapter.id);
  };

  const getAllChapterIds = async (bookIds) => {
    const chapterIds = await Promise.all(
      bookIds.map((bookId) => getChapterIds(bookId))
    );
    return chapterIds.flat();
  };

  const bookIds = [1]; // Only one book for now
  const chapterIds = await getAllChapterIds(bookIds);

  return chapterIds.map((id) => ({ params: { id } }));
};

/**
 * Fetch content for the chapter
 */
const { id } = Astro.params;

const API_URL = import.meta.env.API_URL;

const chapterContentRes = await fetch(`${API_URL}/chapters/${id}/content.json`);
const { chapter } = await chapterContentRes.json();

/**
 * Fetch footnotes for each Pauri and Tuk
 */
const footnotePromises = [];

console.log("STARTING TO FETCH FOOTNOTES");
for (const chhand of chapter.chhands) {
  for (const pauri of chhand.pauris) {
    if (pauri.footnote?.entryId) {
      const promise = fetchFootnoteContent(pauri.footnote.entryId).then(
        (customFootnotes) => {
          pauri.footnote.customFootnotes = customFootnotes;
        }
      );
      footnotePromises.push(promise);
    }
    for (const tuk of pauri.tuks) {
      if (tuk.footnote?.entryId) {
        const promise = fetchFootnoteContent(tuk.footnote.entryId).then(
          (customFootnotes) => {
            tuk.footnote.customFootnotes = customFootnotes;
          }
        );
        footnotePromises.push(promise);
      }
    }
  }
}

await Promise.all(footnotePromises);
---

<Layout title={`SPG - Chapter ${chapter.number} - ${chapter.title}`}>
  <div class="flex w-full justify-center">
    <div class="my-3 lg:max-w-7xl flex flex-col items-center">
      <h1 class="italic font-serif py-2 text-xl font-semibold text-center">
        {chapter.title}
      </h1>
      <h2 class="font-serif py-2 font-medium text-center">
        Chapter #{chapter.number} of {chapter.book.enTitle}
      </h2>
    </div>
  </div>

  <div class="flex w-full justify-center">
    <div class="my-3 lg:max-w-7xl flex flex-col items-center">
      <h3 class="font-serif py-2 font-medium text-center">
        {chapter.chhands.length} Chhands
      </h3>
    </div>
  </div>

  <div class="my-3 flex flex-col">
    {
      chapter.chhands.map((chhand) => {
        return (
          <div class="my-4">
            <h3 class="font-serif text-xl font-semibold">{chhand.name}</h3>
            {chhand.pauris.slice(0, 5).map((pauri) => (
              <Pauri pauri={pauri} />
            ))}
          </div>
        );
      })
    }
  </div>

  <FootnoteSlideOver client:load />
</Layout>
